// checksum 0x898f version 0x70013
/*
  This file was generated by the Qt Quick Application wizard of Qt Creator.
  QmlApplicationViewer is a convenience class containing mobile device specific
  code such as screen orientation handling. Also QML paths and debugging are
  handled here.
  It is recommended not to modify this file, since newer versions of Qt Creator
  may offer an updated version of it.
*/

#ifndef QMLAPPLICATIONVIEWER_H
#define QMLAPPLICATIONVIEWER_H

#include <QtDeclarative/QDeclarativeView>

namespace d3t12 {

class UIEmitter : public QObject { Q_OBJECT
public:
  void emitSignal();

signals:
  void updateSignal();
};

struct Updater {
  virtual void update() = 0;
};

class StartButton : public QObject { Q_OBJECT
public:
  static void* ptr;
  static void (*callback)(void*);
  Q_INVOKABLE void clickButton();
};

class CountryOkButton : public QObject { Q_OBJECT
public:
  static void* ptr;
  static void (*callback)(void*);
  Q_INVOKABLE void clickButton();
};

class BadCountryButton : public QObject { Q_OBJECT
public:
  static void* ptr;
  static void (*callback)(void*);
  Q_INVOKABLE void clickButton();
};

} //d3t12

class QmlApplicationViewer : public QDeclarativeView { Q_OBJECT
  d3t12::Updater* updater;
  d3t12::UIEmitter* emitter;

public:
  explicit QmlApplicationViewer(d3t12::UIEmitter* _emitter, QWidget *parent = 0);
  virtual ~QmlApplicationViewer();

  inline void setUpdater(d3t12::Updater* _updater) {
    updater = _updater;
  }

public slots:
  void updateSlot();
};

#endif // QMLAPPLICATIONVIEWER_H
